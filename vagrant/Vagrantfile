Vagrant.configure("2") do |config|

    # Start - Jenkins-Master
    config.vm.define "vm1" do |vm1|
      vm1.vm.box = "generic/ubuntu2004"
      vm1.vm.box_version = "3.6.8"
      vm1.vm.hostname = "Jenkins-Master"
      vm1.vm.network "private_network", ip: "172.16.30.11"
  
      vm1.vm.provider "virtualbox" do |vb1|
        vb1.name = "Jenkins-Master"
        vb1.memory = 1024
        vb1.cpus = 1
      end
  
      vm1.vm.provision "shell" do |s1|
        ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        s1.inline = <<-SHELL
          # Create khanhnguyen user
          useradd -s /bin/bash -d /home/khanhnguyen/ -m -G sudo khanhnguyen
          echo 'khanhnguyen ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          mkdir -p /home/khanhnguyen/.ssh && chown -R khanhnguyen /home/khanhnguyen/.ssh
          echo #{ssh_pub_key} >> /home/khanhnguyen/.ssh/authorized_keys
        SHELL
      end
    end
    # End - Jenkins-Master
  
    # Start - Jenkins-Agent
    config.vm.define "vm2" do |vm2|
      vm2.vm.box = "generic/ubuntu2004"
      vm2.vm.box_version = "3.6.8"
      vm2.vm.hostname = "Jenkins-Agent"
      vm2.vm.network "private_network", ip: "172.16.30.12"
  
      vm2.vm.provider "virtualbox" do |vb2|
        vb2.name = "Jenkins-Agent"
        vb2.memory = 1024
        vb2.cpus = 1
      end
  
      vm2.vm.provision "shell" do |s2|
        ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        s2.inline = <<-SHELL
          # Create khanhnguyen user
          useradd -s /bin/bash -d /home/khanhnguyen/ -m -G sudo khanhnguyen
          echo 'khanhnguyen ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          mkdir -p /home/khanhnguyen/.ssh && chown -R khanhnguyen /home/khanhnguyen/.ssh
          echo #{ssh_pub_key} >> /home/khanhnguyen/.ssh/authorized_keys
        SHELL
      end
    end
    # End - Jenkins-Agent
  
    # Start - SonarQube
    config.vm.define "vm3" do |vm3|
        vm3.vm.box = "generic/ubuntu2004"
        vm3.vm.box_version = "3.6.8"
        vm3.vm.hostname = "SonarQube"
        vm3.vm.network "private_network", ip: "172.16.30.13"
    
        vm3.vm.provider "virtualbox" do |vb3|
          vb3.name = "SonarQube"
          vb3.memory = 2048
          vb3.cpus = 2
        end
    
        vm3.vm.provision "shell" do |s3|
          ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
          s3.inline = <<-SHELL
            # Create khanhnguyen user
            useradd -s /bin/bash -d /home/khanhnguyen/ -m -G sudo khanhnguyen
            echo 'khanhnguyen ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
            mkdir -p /home/khanhnguyen/.ssh && chown -R khanhnguyen /home/khanhnguyen/.ssh
            echo #{ssh_pub_key} >> /home/khanhnguyen/.ssh/authorized_keys
          SHELL
        end
    end
    # End - SonarQube
  
    # Start - EKS-Boostrap-Server
    config.vm.define "vm4" do |vm4|
        vm4.vm.box = "generic/ubuntu2004"
        vm4.vm.box_version = "3.6.8"
        vm4.vm.hostname = "EKS-Boostrap-Server"
        vm4.vm.network "private_network", ip: "172.16.30.14"
    
        vm4.vm.provider "virtualbox" do |vb4|
          vb4.name = "EKS-Boostrap-Server"
          vb4.memory = 1024
          vb4.cpus = 1
        end
    
        vm4.vm.provision "shell" do |s4|
          ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
          s4.inline = <<-SHELL
            # Create khanhnguyen user
            useradd -s /bin/bash -d /home/khanhnguyen/ -m -G sudo khanhnguyen
            echo 'khanhnguyen ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
            mkdir -p /home/khanhnguyen/.ssh && chown -R khanhnguyen /home/khanhnguyen/.ssh
            echo #{ssh_pub_key} >> /home/khanhnguyen/.ssh/authorized_keys
          SHELL
        end
    end
    # End - EKS-Boostrap-Server

  end
  